name: CI
on:
  push:
    branches:
      - main
  pull_request:
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  RUSTFLAGS: -D warnings
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Head
        uses: actions/checkout@v3
      - name: Rust Install
        uses: wallet-rs/wallet-rs/.github/actions/rust-install@main
        with:
          sccache_endpoint: ${{ secrets.SCCACHE_ENDPOINT }}
          sccache_key_id: ${{ secrets.SCCACHE_KEY_ID }}
          sccache_secret: ${{ secrets.SCCACHE_SECRET }}
      - name: Rust Format Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check
      - name: Rust Finish
        uses: wallet-rs/wallet-rs/.github/actions/rust-finish@main
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Head
        uses: actions/checkout@v3
      - name: Rust Install
        uses: wallet-rs/wallet-rs/.github/actions/rust-install@main
        with:
          sccache_endpoint: ${{ secrets.SCCACHE_ENDPOINT }}
          sccache_key_id: ${{ secrets.SCCACHE_KEY_ID }}
          sccache_secret: ${{ secrets.SCCACHE_SECRET }}
      - name: Rust Format Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check
      - name: Rust Clippy Check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
      - name: Rust Finish
        uses: wallet-rs/wallet-rs/.github/actions/rust-finish@main
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Head
        uses: actions/checkout@v3
      - name: Rust Install
        uses: wallet-rs/wallet-rs/.github/actions/rust-install@main
        with:
          sccache_endpoint: ${{ secrets.SCCACHE_ENDPOINT }}
          sccache_key_id: ${{ secrets.SCCACHE_KEY_ID }}
          sccache_secret: ${{ secrets.SCCACHE_SECRET }}
      - name: Rust Format Check
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --check
      - name: Rust Coverage Install
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Rust Coverage
        run: |
          cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Rust Finish
        uses: wallet-rs/wallet-rs/.github/actions/rust-finish@main
